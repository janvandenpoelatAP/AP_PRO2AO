// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oefening_11_01_CourseManager.DbContexts;

#nullable disable

namespace Oefening_11_01_CourseManager.Migrations
{
    [DbContext(typeof(CourseDbContext))]
    partial class CourseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CourseTeacher", b =>
                {
                    b.Property<Guid>("CoursesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TeachersId")
                        .HasColumnType("char(36)");

                    b.HasKey("CoursesId", "TeachersId");

                    b.HasIndex("TeachersId");

                    b.ToTable("CourseTeacher");

                    b.HasData(
                        new
                        {
                            CoursesId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            TeachersId = new Guid("eacc5169-b2a7-41ad-92c3-dbb1a5e7af06")
                        },
                        new
                        {
                            CoursesId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            TeachersId = new Guid("eacc5169-b2a7-41ad-92c3-dbb1a5e7af06")
                        },
                        new
                        {
                            CoursesId = new Guid("c19099ed-94db-44ba-885b-0ad7205d5e40"),
                            TeachersId = new Guid("eacc5169-b2a7-41ad-92c3-dbb1a5e7af06")
                        },
                        new
                        {
                            CoursesId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            TeachersId = new Guid("fe462ec7-b30c-4987-8a8e-5f7dbd8e0cfa")
                        },
                        new
                        {
                            CoursesId = new Guid("c19099ed-94db-44ba-885b-0ad7205d5e40"),
                            TeachersId = new Guid("fe462ec7-b30c-4987-8a8e-5f7dbd8e0cfa")
                        },
                        new
                        {
                            CoursesId = new Guid("0c4dc798-b38b-4a1c-905c-a9e76dbef17b"),
                            TeachersId = new Guid("fe462ec7-b30c-4987-8a8e-5f7dbd8e0cfa")
                        },
                        new
                        {
                            CoursesId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            TeachersId = new Guid("b512d7cf-b331-4b54-8dae-d1228d128e8d")
                        });
                });

            modelBuilder.Entity("Oefening_09_01_CourseManager.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Name = "IT Organisatie"
                        },
                        new
                        {
                            Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            Name = "WPL Case"
                        },
                        new
                        {
                            Id = new Guid("c19099ed-94db-44ba-885b-0ad7205d5e40"),
                            Name = "API Ontwikkeling"
                        },
                        new
                        {
                            Id = new Guid("0c4dc798-b38b-4a1c-905c-a9e76dbef17b"),
                            Name = "Testing & Security"
                        });
                });

            modelBuilder.Entity("Oefening_09_01_CourseManager.Entities.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eacc5169-b2a7-41ad-92c3-dbb1a5e7af06"),
                            Name = "Dimitri Sturm"
                        },
                        new
                        {
                            Id = new Guid("fe462ec7-b30c-4987-8a8e-5f7dbd8e0cfa"),
                            Name = "Jan Van den Poel"
                        },
                        new
                        {
                            Id = new Guid("b512d7cf-b331-4b54-8dae-d1228d128e8d"),
                            Name = "Sven Charleer"
                        });
                });

            modelBuilder.Entity("CourseTeacher", b =>
                {
                    b.HasOne("Oefening_09_01_CourseManager.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oefening_09_01_CourseManager.Entities.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
